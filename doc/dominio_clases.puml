@startuml OpoTestDomain

class Community

class User {
    - username
    - categorySelected
}

class Teacher {
    -conceptSelected
}

class Student

class Evaluation {
    - result
}

class Category {
    -subcategories
    -concepts
}

class Test {
    - questions[ category.getAllQuestions() ]
}

class Concept {
    - keyword
    - fakekeywords[ ]
    - definitions[ ]
    - relations[ ]
    - questions[ ]
}

class Definition {
    - content
    - isFake
    - createdDate
    - justifications[ ]
}

class Justification {
    - content
    - isFake
    - createdDate
    - explication
}

class Relation {
    - contents[ ]
    - isFake
    - createdDate
}

class Question {
    - statementImplementor
    - answers[ ]
    # void setStatementImplementor()
    + bool isAnsweredBy(studentName)
}

class Statement

class Answer {
    - content
    - isOK
    - isEvaluated
    - studentName
    - createdDate
    - evaluatedDate
}

class MultipleChoiceQuestion

class OpenQuestion

class Option

class Correct

Class Incorrect

class OpenAnswer {
    - isUsefulToConcept
    - content
    - evaluatedBy
}

Class SelectedOption {

}


Community *--"2..n" User
Community o--"0..n" Category

Category o--"0..n" Category : Subcategories

User <|-- Teacher
User <|-- Student

Teacher ..> Concept
Category o--"0..n" Concept
'Concept --o Category
Concept o--"0..n" Question
'Question --o Concept
Concept o--"0..n" Definition
Definition o--"0..n" Justification: isFake = true
Justification o-- Explication: isFake = true
Concept o--"0..n" Relation

Student -->"0..n" Evaluation
Evaluation --> Test

Teacher ..> Evaluation
Definition ..> OpenAnswer :isUsefulToConcept
Justification ..> OpenAnswer :isUsefulToConcept
Relation ..> OpenAnswer :isUsefulToConcept

Evaluation ..> OpenAnswer : manual (! isEvaluated)
Evaluation ..> SelectedOption : automatic

Test *--"1..n" Question
Question <|-- MultipleChoiceQuestion
Question <|-- OpenQuestion
Question *--   Statement
MultipleChoiceQuestion *--"2..n" Option
Option <|-- Incorrect
Option <|-- Correct
MultipleChoiceQuestion *-- Correct
MultipleChoiceQuestion *--"1..n" Incorrect
MultipleChoiceQuestion o--"0..n" SelectedOption
OpenQuestion o--"0..n" OpenAnswer
Question o--"0..n" Answer
Answer <|-- OpenAnswer
Answer <|-- SelectedOption
OpenAnswer --> Solution


@enduml




